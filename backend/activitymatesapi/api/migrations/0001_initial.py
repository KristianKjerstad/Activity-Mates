# Generated by Django 5.1 on 2024-08-21 11:24

import api.models
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[(api.models.CategoryEnum['VOLLEYBALL'], api.models.CategoryEnum['VOLLEYBALL']), (api.models.CategoryEnum['FOOTBALL'], api.models.CategoryEnum['FOOTBALL']), (api.models.CategoryEnum['PADEL'], api.models.CategoryEnum['PADEL']), (api.models.CategoryEnum['TENNIS'], api.models.CategoryEnum['TENNIS']), (api.models.CategoryEnum['WEIGHTLIFTING'], api.models.CategoryEnum['WEIGHTLIFTING']), (api.models.CategoryEnum['GAMING'], api.models.CategoryEnum['GAMING']), (api.models.CategoryEnum['NIGHTLIFE'], api.models.CategoryEnum['NIGHTLIFE']), (api.models.CategoryEnum['FOOD'], api.models.CategoryEnum['FOOD'])])),
                ('parent_category', models.CharField(blank=True, choices=[(api.models.ParentCategoryEnum['SPORTS'], api.models.ParentCategoryEnum['SPORTS'])], default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('event_time', models.DateTimeField()),
                ('country', models.CharField(default='', max_length=250)),
                ('city', models.CharField(default='', max_length=250)),
                ('address', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=2000)),
                ('max_num_participants', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.events')),
            ],
            options={
                'db_table': 'event_registrations',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('age_interval', models.CharField(choices=[(api.models.AgeIntervalEnum['A'], api.models.AgeIntervalEnum['A']), (api.models.AgeIntervalEnum['B'], api.models.AgeIntervalEnum['B']), (api.models.AgeIntervalEnum['C'], api.models.AgeIntervalEnum['C']), (api.models.AgeIntervalEnum['D'], api.models.AgeIntervalEnum['D']), (api.models.AgeIntervalEnum['E'], api.models.AgeIntervalEnum['E']), (api.models.AgeIntervalEnum['F'], api.models.AgeIntervalEnum['F'])])),
                ('country', models.CharField(default='', max_length=250)),
                ('city', models.CharField(default='', max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.category')),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.AddField(
            model_name='events',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.group'),
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.group')),
            ],
            options={
                'db_table': 'group_memberships',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=250)),
                ('phone_number', models.CharField(default='', max_length=250)),
                ('email', models.EmailField(max_length=254)),
                ('country', models.CharField(default='', max_length=250)),
                ('city', models.CharField(default='', max_length=250)),
                ('date_of_birth', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('events', models.ManyToManyField(through='api.EventRegistration', to='api.events')),
                ('groups', models.ManyToManyField(through='api.GroupMembership', to='api.group')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user'),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user'),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=2000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('user', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='eventregistration',
            unique_together={('user', 'event')},
        ),
    ]
